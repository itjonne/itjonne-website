{"version":3,"sources":["constants/routes.tsx","components/Firebase/firebase.ts","components/Firebase/context.ts","components/Firebase/index.tsx","components/Navigation/index.tsx","components/SignIn/index.tsx","components/Home/DrawingComponent.js","components/Home/Canvas.js","components/Home/Gallery.js","components/Home/index.tsx","components/App/index.tsx","index.tsx"],"names":["HOME","SIGN_IN","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","console","log","Firebase","database","auth","user","admin","setLoggedUser","getLoggedUser","currentUser","createUserWithEmailAndPassword","email","password","signInWithEmailAndPassword","signOut","passwordReset","sendPasswordResetEmail","passwordUpdate","updatePassword","checkIfLoggedIn","getUsers","ref","getImages","addImage","data","newImageKey","firebase","uid","push","key","location","set","error","initializeApp","this","FirebaseContext","createContext","Navigation","useContext","history","useHistory","className","to","ROUTES","onClick","event","INITIAL_STATE","SignIn","useState","setUser","onChange","target","name","value","onSubmit","preventDefault","then","catch","message","type","placeholder","DrawingComponent","props","color","setColor","drawColor","setDrawColor","refCanvas","useRef","brushColor","catenaryColor","current","undo","p","alpha","parseFloat","rgb","a","alphaInHex","Math","max","min","round","toString","padStart","toUpperCase","hex","localStorage","setItem","getSaveData","getItem","clear","Canvas","thisCanvas","useEffect","loadSaveData","loadTimeOffset","floor","random","Gallery","images","setImages","isLoading","setIsLoading","unsubscribe","on","snapshot","val","found","Object","keys","map","image","i","canvasHeight","canvasWidth","disabled","Home","lazyRadius","hideGrid","brushRadius","App","exact","path","component","HomePage","SignInPage","from","ReactDOM","render","Provider","document","getElementById"],"mappings":"yRAAaA,EAAO,IACPC,EAAU,U,gBCGjBC,G,cAAS,CACbC,OAAQC,0CACRC,WAAYD,6BACZE,YAAaF,oEACbG,UAAWH,aACXI,cAAeJ,yBACfK,kBAAmBL,gBACnBM,MAAON,6CACPO,cAAeP,iBAGjBQ,QAAQC,IAAIX,G,IA2FGY,EAnFb,aAAe,IAAD,gCALNC,cAKM,OAJNC,UAIM,OAHNC,UAGM,OAFNC,MAAgB,+BAEV,KASdC,cAAgB,SAACF,GACf,EAAKA,KAAOA,GAVA,KAadG,cAAgB,WACd,OAAO,EAAKJ,KAAKK,aAdL,KAoBdC,+BAAiC,SAACC,EAAeC,GAC/C,OAAO,EAAKR,KAAKM,+BAA+BC,EAAOC,IArB3C,KAyBdC,2BAA6B,SAACF,EAAeC,GAC3C,OAAO,EAAKR,KAAKS,2BAA2BF,EAAOC,IA1BvC,KA8BdE,QAAU,WACR,OAAO,EAAKV,KAAKU,WA/BL,KAkCdC,cAAgB,SAACJ,GACf,OAAO,EAAKP,KAAKY,uBAAuBL,IAnC5B,KAsCdM,eAAiB,SAACL,GAChB,GAAI,EAAKR,KAAKK,YACZ,OAAO,EAAKL,KAAKK,YAAYS,eAAeN,IAxClC,KA4CdO,gBAAkB,WAChB,OAAO,EAAKf,KAAKK,aA7CL,KAiDdW,SAAW,kBAAM,EAAKjB,SAASkB,IAAI,WAjDrB,KAmDdC,UAAY,WACR,OAAO,EAAKnB,SAASkB,IAAI,SAAW,EAAKf,MAAQ,YApDvC,KAwDdiB,SAAW,SAACC,GACV,GAAI,EAAKpB,KAAKK,YAAa,CACzB,IAAIgB,EAAcC,IAASvB,WAAWkB,IAAI,SAAW,EAAKjB,KAAKK,YAAYkB,IAAM,WAAWC,OAAOC,IAC7FC,EAAQ,iBAAa,EAAK1B,KAAKK,YAAYkB,IAAnC,mBAAiDF,GAE/D,IACEC,IAASvB,WAAWkB,IAAIS,GAAUC,IAAIP,GACtC,MAAOQ,GACPhC,QAAQC,IAAI+B,QAGT,CACLhC,QAAQC,IAAI,iBACRwB,EAAcC,IAASvB,WAAWkB,IAAI,SAAW,EAAKf,MAAQ,WAAWsB,OAAOC,IAApF,IACMC,EAAQ,iBAAa,EAAKxB,MAAlB,mBAAkCmB,GAEhD,IACEC,IAASvB,WAAWkB,IAAIS,GAAUC,IAAIP,GACtC,MAAOQ,GACPhC,QAAQC,IAAI+B,MA1EhBN,IAASO,cAAc3C,GACvB4C,KAAK/B,SAAWuB,IAASvB,WACzB+B,KAAK9B,KAAOsB,IAAStB,OACrB8B,KAAK7B,KAAO,MCtBD8B,EAFSC,wBAA+B,MCCxClC,ICmBAmC,EAjBI,WACjB,IAAMX,EAAWY,qBAAWH,GACtBI,EAAUC,cAOhB,OACE,sBAAKC,UAAU,SAAf,UACI,cAAC,IAAD,CAAMA,UAAU,cAAcC,GAAIC,EAAOvD,KAAzC,wBACA,wBAAQwD,QARQ,SAACC,GACX,OAARnB,QAAQ,IAARA,KAAUZ,UACVyB,EAAQX,KAAKe,EAAOtD,UAMlB,+B,wBCNFyD,EAAsB,CAC1BnC,MAAO,GACPC,SAAU,GACVoB,MAAO,IAiDMe,EA9CA,WAAO,IAAD,EACKC,mBAAeF,GADpB,mBACZzC,EADY,KACN4C,EADM,KAEbvB,EAAWY,qBAAWH,GACtBI,EAAUC,cAGd7B,EAGEN,EAHFM,MACAC,EAEEP,EAFFO,SACAoB,EACE3B,EADF2B,MAkBIkB,EAAW,SAACL,GAChBI,EAAQ,2BAAI5C,GAAL,kBAAYwC,EAAMM,OAAOC,KAAOP,EAAMM,OAAOE,UAKtD,OACE,sBAAKZ,UAAU,SAAf,UACE,wDACA,uBAAMa,SAxBO,SAACT,GAChBA,EAAMU,iBAEN7B,GAAYA,EAASb,2BAA2BF,EAAOC,GACpD4C,MAAK,SAACnD,GACLqB,EAASnB,cAAcF,GACvB4C,EAAQ,eAAKH,IACbP,EAAQX,KAAKe,EAAOvD,SAErBqE,OAAM,SAAAzB,GACLhC,QAAQC,IAAI+B,GACZiB,EAAQ,2BAAI5C,GAAL,IAAW2B,MAAOA,EAAM0B,eAajC,UACE,2DACA,uBAAOR,SAAUA,EAAUE,KAAK,QAAQC,MAAO1C,EAAOgD,KAAK,QAAQC,YAAY,uCAC/E,uBAAOV,SAAUA,EAAUE,KAAK,WAAWC,MAAOzC,EAAU+C,KAAK,WAAWC,YAAY,wBACvF5B,GAAS,mBAAGS,UAAU,QAAb,SAAsBT,IAChC,wBAAQ2B,KAAK,SAAb,0C,iBC9CKE,EAAmB,SAACC,GAAW,IAAD,EACfd,mBAAS,WADM,mBAClCe,EADkC,KAC3BC,EAD2B,OAEPhB,mBAAS,WAFF,mBAElCiB,EAFkC,KAEvBC,EAFuB,KAInCC,EAAYC,iBAAO,MACnB1C,EAAWY,qBAAWH,GAoB5B,OACE,sBAAKM,UAAU,mBAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,cAAC,IAAD,aAAYpB,IAAK8C,EAAWE,WAAYJ,EAAWK,cAAeL,GAAeH,MAEnF,sBAAKrB,UAAU,UAAf,UACE,qBAAKA,UAAU,OAAf,SACE,wBAAQG,QAAS,kBAAMuB,EAAUI,QAAQC,QAAzC,qBAEF,qBAAK/B,UAAU,cAAf,SACE,cAAC,IAAD,CACEsB,MAAOA,EACPb,SA9BmB,SAACa,GAC5B,IAfkBU,EAeZC,EAAkC,IAA1BC,WAAWZ,EAAMa,IAAIC,GAC7BC,GAhBYL,EAgBcC,EAflBK,KAAKC,IAAI,EAAGD,KAAKE,IAAI,IAAKR,IACzBM,KAAKG,MAAMT,EAAI,IAAM,KACZU,SAAS,IACnBC,SAAS,EAAG,KAAKC,eAa/BrB,EAASD,EAAMa,KACfV,EAAaH,EAAMuB,IAAMR,QA6BrB,qBAAKrC,UAAU,OAAf,SACE,wBAAQG,QAAS,kBAzBvB2C,aAAaC,QACX,eACArB,EAAUI,QAAQkB,eAGpB/D,EAASH,SAASgE,aAAaG,QAAQ,sBACvCvB,EAAUI,QAAQoB,SAmBZ,qCCjDGC,EAAS,SAAC9B,GACrB,IAAM+B,EAAazB,iBAAO,MAE1B0B,qBAAU,WACRD,EAAWtB,QAAQwB,aAAajC,EAAMtC,QACtC,IAEF,IAKuByD,EAAKD,EAI5B,OACE,qBAAKvC,UAAU,SAASG,QAAS,SAACC,GAAD,OATjCgD,EAAWtB,QAAQoB,aACnBE,EAAWtB,QAAQwB,aAAajC,EAAMtC,OAQtC,SACE,cAAC,IAAD,yBAAYH,IAAKwE,GAAgB/B,GAAjC,IAAwCkC,gBANrBf,EAMmD,GAN9CD,EAMiD,GALpED,KAAKkB,MAAMlB,KAAKmB,UAAYlB,EAAMC,EAAM,IAAMA,SCZ5CkB,EAAU,WAAO,IAAD,EACCnD,mBAAS,IADV,mBACpBoD,EADoB,KACZC,EADY,OAEOrD,oBAAS,GAFhB,mBAEpBsD,EAFoB,KAETC,EAFS,KAIrB7E,EAAWY,qBAAWH,GAE5B2D,qBAAU,WACR,IACMU,EADY9E,EAASJ,YACGmF,GAAG,SAAS,SAACC,GAIzC,IAHA,IAAMlF,EAAOkF,EAASC,MAEhBC,EAAQ,GACd,MAFaC,OAAOC,KAAKtF,GAEzB,eAAsB,CAAjB,IAAIK,EAAG,KACV+E,EAAMhF,KAAKJ,EAAKK,IAElBwE,EAAUO,GACVL,GAAa,MAEf,OAAO,kBAAMC,KAEZ,CAAC9E,IAEe0C,iBAAO,MAG1B,OACE,sBAAK3B,UAAU,UAAf,UACG6D,GAAa,qBAAK7D,UAAU,UAAf,SAAyB,sEAEvC2D,EACEA,EAAOW,KAAI,SAACC,EAAOC,GACnB,OAAO,cAAC,EAAD,CAAgBzF,KAAMwF,EAAOE,aAAc,IAAKC,YAAa,IAAKC,UAAU,GAA/DH,MAEpB,oBAAIxE,UAAU,SAAd,qECTO4E,EArBF,WACX,IAAM3F,EAAWY,qBAAWH,GACtBI,EAAUC,cAQhB,OANAsD,qBAAU,YACJ,OAACpE,QAAD,IAACA,OAAD,EAACA,EAAUlB,kBACb+B,EAAQX,KAAKe,EAAOtD,WAEtB,CAACqC,EAAUa,IAGX,sBAAKE,UAAU,OAAf,UACE,oBAAIA,UAAU,SAAd,uDACA,cAAC,EAAD,CAAkB6E,WAAY,EAAGC,UAAU,EAAMC,YAAa,IAC9D,oBAAI/E,UAAU,SAAd,uBACA,cAAC,EAAD,IACA,mBAAGA,UAAU,SAAb,mDCJSgF,EAXH,WACV,OACE,eAAC,IAAD,WACI,cAAC,EAAD,IACA,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAMhF,EAAOvD,KAAMwI,UAAWC,IAC3C,cAAC,IAAD,CAAOF,KAAMhF,EAAOtD,QAASuI,UAAWE,IACxC,cAAC,IAAD,CAAUC,KAAK,IAAIrF,GAAG,UCR9BsF,IAASC,OACL,cAAC,EAAgBC,SAAjB,CAA0B7E,MAAO,IAAInD,EAArC,SACE,cAAC,EAAD,MAEHiI,SAASC,eAAe,W","file":"static/js/main.2f4cb59e.chunk.js","sourcesContent":["export const HOME = \"/\";\nexport const SIGN_IN = \"/signin\";\n","import firebase from 'firebase/app';\nimport \"firebase/database\";\nimport \"firebase/auth\";\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\n};\n\nconsole.log(config);\n\nclass Firebase {\n  private database: firebase.database.Database;\n  private auth: firebase.auth.Auth;\n  private user: firebase.auth.UserCredential | null;\n  private admin: string = \"4jJw2Qp9zchYpmsNmqiw2dOwWZ13\";\n\n  constructor() {\n    firebase.initializeApp(config);\n    this.database = firebase.database();\n    this.auth = firebase.auth();\n    this.user = null;\n  }\n\n  // ============ User API ==============\n\n  setLoggedUser = (user: firebase.auth.UserCredential) => {\n    this.user = user;\n  }\n\n  getLoggedUser = () => {\n    return this.auth.currentUser;\n  }\n\n  // ============ Auth API ==============\n\n  // Create user\n  createUserWithEmailAndPassword = (email: string, password: string) => {\n    return this.auth.createUserWithEmailAndPassword(email, password);\n  }\n\n  // Sign in\n  signInWithEmailAndPassword = (email: string, password: string) => {\n    return this.auth.signInWithEmailAndPassword(email, password);\n  }\n\n  // Sign out\n  signOut = () => {\n    return this.auth.signOut();\n  }\n\n  passwordReset = (email: string) => {\n    return this.auth.sendPasswordResetEmail(email);\n  }\n \n  passwordUpdate = (password: string) => {\n    if (this.auth.currentUser) {\n      return this.auth.currentUser.updatePassword(password);\n    }\n  }\n\n  checkIfLoggedIn = () => {\n    return this.auth.currentUser;\n  }\n\n  // Database API\n  getUsers = () => this.database.ref(\"/users\");\n\n  getImages = () => {\n      return this.database.ref(\"users/\" + this.admin + \"/images\");\n\n  }\n  \n  addImage = (data: string) => {\n    if (this.auth.currentUser) {\n      var newImageKey = firebase.database().ref(\"users/\" + this.auth.currentUser.uid + \"/images\").push().key;\n      const location = `/users/${this.auth.currentUser.uid}/images/${newImageKey}`;\n    \n      try {\n        firebase.database().ref(location).set(data);\n      } catch (error) {\n        console.log(error);\n      }\n    \n    } else {\n      console.log(\"Not logged in\")\n      var newImageKey = firebase.database().ref(\"users/\" + this.admin + \"/images\").push().key;\n      const location = `/users/${this.admin}/images/${newImageKey}`;\n    \n      try {\n        firebase.database().ref(location).set(data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n\n  }\n}\n\nexport default Firebase;","import React, { createContext } from 'react';\nimport Firebase from './firebase';\n\nconst FirebaseContext = createContext<Firebase | null>(null);\n\nexport default FirebaseContext;","import Firebase from './firebase';\nimport FirebaseContext from './context';\n\nexport { FirebaseContext };\nexport default Firebase;","import React, { useContext } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport { ROUTES } from '../../constants/';\nimport { FirebaseContext } from '../Firebase';\n\nconst Navigation = () => {\n  const firebase = useContext(FirebaseContext);\n  const history = useHistory();\n\n  const handleSignOut = (event: React.MouseEvent<HTMLButtonElement>) => {\n      firebase?.signOut();\n      history.push(ROUTES.SIGN_IN);\n  } \n\n  return(\n    <div className=\"header\">\n        <Link className=\"header-link\" to={ROUTES.HOME}>://itjonne</Link>\n        <button onClick={handleSignOut}>Kirjaudu ulos</button>\n    </div>\n  )\n};\n\nexport default Navigation;","import React, {useContext, useState} from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { FirebaseContext } from '../Firebase';\nimport { ROUTES } from '../../constants';\n\ninterface User {\n  email: string,\n  password: string,\n  error: string,\n}\n\nconst INITIAL_STATE: User = {\n  email: \"\",\n  password: \"\",\n  error: \"\",\n}\n\nconst SignIn = () => {\n  const [user, setUser] = useState<User>(INITIAL_STATE);\n  const firebase = useContext(FirebaseContext);\n  const history = useHistory();\n\n  const {\n    email,\n    password,\n    error,\n  } = user;\n\n  const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    firebase && firebase.signInWithEmailAndPassword(email, password)\n      .then((user) => {\n        firebase.setLoggedUser(user); // Tää menee suoraan contextiin, pitäis renderöidä kaikki?!\n        setUser({ ...INITIAL_STATE });\n        history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        console.log(error);\n        setUser({...user, error: error.message});\n      });\n  }\n\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setUser({...user, [event.target.name]: event.target.value});\n  }\n\n\n\n  return(\n    <div className=\"signin\">\n      <h1>Kirjaudu Sisään:</h1>\n      <form onSubmit={onSubmit}>\n        <p>admin@admin.com / password</p>\n        <input onChange={onChange} name=\"email\" value={email} type=\"email\" placeholder=\"Sähköposti (admin@admin.com)\" />\n        <input onChange={onChange} name=\"password\" value={password} type=\"password\" placeholder=\"Salasana (password)\" />\n        {error && <p className=\"error\">{error}</p>}\n        <button type=\"submit\">Kirjaudu Sisään</button>\n      </form>\n    </div>\n  )\n}\n\nexport default SignIn;","import React, {useContext, useRef, useState} from 'react';\r\nimport CanvasDraw from 'react-canvas-draw';\r\nimport { SketchPicker } from 'react-color';\r\nimport { FirebaseContext } from '../Firebase';\r\n\r\nconst percentToHex = (p) => {\r\n  const percent = Math.max(0, Math.min(100, p)); // bound percent from 0 to 100\r\n  const intValue = Math.round(p / 100 * 255); // map percent to nearest integer (0 - 255)\r\n  const hexValue = intValue.toString(16); // get hexadecimal representation\r\n  return hexValue.padStart(2, '0').toUpperCase(); // format with leading 0 and upper case characters\r\n}\r\n\r\nexport const DrawingComponent = (props) => {\r\n  const [color, setColor] = useState(\"#000000\");\r\n  const [drawColor, setDrawColor] = useState(\"#000000\");\r\n\r\n  const refCanvas = useRef(null);\r\n  const firebase = useContext(FirebaseContext);\r\n  \r\n  const handleChangeComplete = (color) => {\r\n    const alpha = parseFloat(color.rgb.a) * 100;\r\n    const alphaInHex = percentToHex(alpha);\r\n    setColor(color.rgb);\r\n    setDrawColor(color.hex + alphaInHex);\r\n  };\r\n\r\n  const handleSaveData = () => {\r\n    // Runtataan tätä kautta, meneee varmasti oikeeks stringiks nyt nopeesti.\r\n    localStorage.setItem(\r\n      \"savedDrawing\",\r\n      refCanvas.current.getSaveData()\r\n    );\r\n    \r\n    firebase.addImage(localStorage.getItem(\"savedDrawing\"));\r\n    refCanvas.current.clear();\r\n  }\r\n\r\n  return(\r\n    <div className=\"drawingComponent\">\r\n      <div className=\"drawableCanvas\">\r\n        <CanvasDraw ref={refCanvas} brushColor={drawColor} catenaryColor={drawColor} {...props}/>\r\n      </div>\r\n      <div className=\"toolbar\">\r\n        <div className=\"tool\">\r\n          <button onClick={() => refCanvas.current.undo()}>Kumoa</button>\r\n        </div>\r\n        <div className=\"tool center\">\r\n          <SketchPicker\r\n            color={color}\r\n            onChange={handleChangeComplete}        \r\n            />\r\n        </div>\r\n        <div className=\"tool\">\r\n          <button onClick={() => handleSaveData()}>Tallenna kuva!</button>\r\n        </div>\r\n      </div>\r\n      \r\n    </div>\r\n  )\r\n}","import React, { useEffect, useRef, useState } from 'react';\r\n\r\nimport CanvasDraw from 'react-canvas-draw';\r\n\r\nexport const Canvas = (props) => {\r\n  const thisCanvas = useRef(null);\r\n\r\n  useEffect(() => {\r\n    thisCanvas.current.loadSaveData(props.data);\r\n  },[])\r\n\r\n  const handleMouseEnter = (event) => {\r\n    thisCanvas.current.clear();\r\n    thisCanvas.current.loadSaveData(props.data)\r\n  }\r\n\r\n  const randomInteger = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  }\r\n\r\n  return(\r\n    <div className=\"canvas\" onClick={(event) => handleMouseEnter()}>\r\n      <CanvasDraw ref={thisCanvas} {...props} loadTimeOffset={randomInteger(10,50)}/>\r\n    </div>\r\n\r\n  )\r\n}","import React, {useContext, useEffect, useRef, useState} from 'react';\r\nimport { FirebaseContext } from '../Firebase';\r\n\r\nimport { Canvas } from './Canvas';\r\n\r\nexport const Gallery = () => {\r\n  const [images, setImages] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const firebase = useContext(FirebaseContext);\r\n\r\n  useEffect(() => {\r\n    const imagesRef = firebase.getImages();\r\n    const unsubscribe = imagesRef.on(\"value\", (snapshot) => {\r\n      const data = snapshot.val();\r\n      const keys = Object.keys(data);\r\n      const found = [];\r\n      for (let key of keys) {\r\n        found.push(data[key]);\r\n      }\r\n      setImages(found);\r\n      setIsLoading(false);\r\n    })\r\n    return () => unsubscribe;\r\n  \r\n  }, [firebase]);\r\n\r\n  const thisCanvas = useRef(null);\r\n  // Loaditems, setListener.\r\n\r\n  return(\r\n    <div className=\"gallery\">\r\n      {isLoading && <div className=\"loading\"><p>Ootappa hetki, galleria latautuu...</p></div>}\r\n      {\r\n      images \r\n      ? images.map((image, i) => {\r\n        return <Canvas key={i} data={image} canvasHeight={200} canvasWidth={200} disabled={true} />\r\n        })\r\n      : <h1 className=\"center\">Piirräpä kuva ni päästään alkuun!</h1>\r\n      }\r\n    </div>\r\n  )\r\n}","import React, { useContext, useEffect} from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FirebaseContext } from '../Firebase';\nimport { DrawingComponent } from './DrawingComponent';\n\nimport { Gallery } from './Gallery.js';\nimport { ROUTES } from '../../constants';\n\nconst Home = () => {\n  const firebase = useContext(FirebaseContext);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (!firebase?.getLoggedUser()) {\n      history.push(ROUTES.SIGN_IN); \n    }\n  },[firebase, history]);\n\n  return(\n    <div className=\"home\">\n      <h1 className=\"center\">Tervetuloa, piirrä tähän jotain!</h1>\n      <DrawingComponent lazyRadius={0} hideGrid={true} brushRadius={5} />\n      <h1 className=\"center\">Galleria:</h1>\n      <Gallery />\n      <p className=\"center\">Klikkaamalla näkee animaation.</p>\n    </div>\n  )\n};\n\nexport default Home;","import React from 'react';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\n\nimport Navigation from '../Navigation';\nimport SignInPage from '../SignIn';\nimport HomePage from '../Home';\n\nimport { ROUTES } from '../../constants/';\n\nconst App = () => {\n  return(\n    <Router>\n        <Navigation />\n        <Route exact path={ROUTES.HOME} component={HomePage} />\n        <Route path={ROUTES.SIGN_IN} component={SignInPage} />\n        <Redirect from=\"*\" to=\"/\" />\n    </Router>   \n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\nReactDOM.render(\n    <FirebaseContext.Provider value={new Firebase()}>\n      <App />\n    </FirebaseContext.Provider>\n  ,document.getElementById('root')\n);\n"],"sourceRoot":""}