{"version":3,"sources":["constants/routes.tsx","components/Firebase/firebase.ts","components/Firebase/context.ts","components/Firebase/index.tsx","components/Navigation/Link.js","components/Navigation/LinkContainer.js","components/Navigation/index.tsx","components/SignIn/index.tsx","components/Home/DrawingComponent.js","components/Home/CanvasTools.tsx","components/Home/Canvas.js","components/Home/Gallery.js","components/Home/index.tsx","components/App/index.tsx","index.tsx"],"names":["HOME","SIGN_IN","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","database","auth","user","admin","setLoggedUser","getLoggedUser","currentUser","createUserWithEmailAndPassword","email","password","signInWithEmailAndPassword","signOut","passwordReset","sendPasswordResetEmail","passwordUpdate","updatePassword","checkIfLoggedIn","getUsers","ref","getImages","addImageObject","data","newImageKey","firebase","uid","push","key","location","set","error","console","log","addImage","updateImagePoints","imageKey","points","update","deleteImage","remove","initializeApp","this","FirebaseContext","createContext","Link","name","link","icon","className","onClick","url","window","open","focus","LinkContainer","Navigation","useContext","useHistory","to","ROUTES","INITIAL_STATE","SignIn","useState","setUser","history","onChange","event","target","value","onSubmit","preventDefault","then","catch","message","type","placeholder","DrawingComponent","props","color","setColor","drawColor","setDrawColor","getWindowDimensions","windowDimensions","setWindowDimensions","refCanvas","useRef","width","innerWidth","height","innerHeight","correctedWidth","useEffect","handleResize","addEventListener","removeEventListener","canvasWidth","canvasHeight","brushColor","catenaryColor","current","undo","p","alpha","parseFloat","rgb","a","alphaInHex","Math","round","toString","padStart","toUpperCase","hex","JSON","parse","getSaveData","lines","length","localStorage","setItem","image","getItem","reported","clear","handleSaveData","CanvasTools","handlePlus","handleMinus","handleReport","thispoints","setPoints","Canvas","thisCanvas","loadSaveData","min","max","loadTimeOffset","floor","random","id","Gallery","images","setImages","isLoading","setIsLoading","imagesRef","unsubscribe","on","snapshot","val","found","Object","keys","map","i","disabled","Home","lazyRadius","hideGrid","brushRadius","App","exact","path","component","HomePage","SignInPage","from","ReactDOM","render","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.969e79da.chunk.js","sourcesContent":["export const HOME = \"/\";\nexport const SIGN_IN = \"/signin\";\n","import firebase from 'firebase/app';\nimport \"firebase/database\";\nimport \"firebase/auth\";\n\nimport { TYPES } from '../../constants';\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\n};\n\nclass Firebase {\n  private database: firebase.database.Database;\n  private auth: firebase.auth.Auth;\n  private user: firebase.auth.UserCredential | null;\n  private admin: string = \"4jJw2Qp9zchYpmsNmqiw2dOwWZ13\";\n\n  constructor() {\n    firebase.initializeApp(config);\n    this.database = firebase.database();\n    this.auth = firebase.auth();\n    this.user = null;\n  }\n\n  // ============ User API ==============\n\n  setLoggedUser = (user: firebase.auth.UserCredential) => {\n    this.user = user;\n  }\n\n  getLoggedUser = () => {\n    return this.auth.currentUser;\n  }\n\n  // ============ Auth API ==============\n\n  // Create user\n  createUserWithEmailAndPassword = (email: string, password: string) => {\n    return this.auth.createUserWithEmailAndPassword(email, password);\n  }\n\n  // Sign in\n  signInWithEmailAndPassword = (email: string, password: string) => {\n    return this.auth.signInWithEmailAndPassword(email, password);\n  }\n\n  // Sign out\n  signOut = () => {\n    return this.auth.signOut();\n  }\n\n  passwordReset = (email: string) => {\n    return this.auth.sendPasswordResetEmail(email);\n  }\n \n  passwordUpdate = (password: string) => {\n    if (this.auth.currentUser) {\n      return this.auth.currentUser.updatePassword(password);\n    }\n  }\n\n  checkIfLoggedIn = () => {\n    return this.auth.currentUser;\n  }\n\n  // Database API\n  getUsers = () => this.database.ref(\"/users\");\n\n  getImages = () => {\n      return this.database.ref(\"users/\" + this.admin + \"/images\");\n\n  }\n\n  addImageObject = (data: TYPES.ImageObject) => {\n    if (this.auth.currentUser) {\n      var newImageKey = firebase.database().ref(\"users/\" + this.auth.currentUser.uid + \"/images\").push().key;\n      const location = `/users/${this.auth.currentUser.uid}/images/${newImageKey}`;\n    \n      try {\n        firebase.database().ref(location).set(data);\n      } catch (error) {\n        console.log(error);\n      }\n    \n    } else {\n      console.log(\"Not logged in\")\n      var newImageKey = firebase.database().ref(\"users/\" + this.admin + \"/images\").push().key;\n      const location = `/users/${this.admin}/images/${newImageKey}`;\n    \n      try {\n        firebase.database().ref(location).set(data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n  \n  addImage = (data: string) => {\n    if (this.auth.currentUser) {\n      var newImageKey = firebase.database().ref(\"users/\" + this.auth.currentUser.uid + \"/images\").push().key;\n      const location = `/users/${this.auth.currentUser.uid}/images/${newImageKey}`;\n    \n      try {\n        firebase.database().ref(location).set(data);\n      } catch (error) {\n        console.log(error);\n      }\n    \n    } else {\n      console.log(\"Not logged in\")\n      var newImageKey = firebase.database().ref(\"users/\" + this.admin + \"/images\").push().key;\n      const location = `/users/${this.admin}/images/${newImageKey}`;\n    \n      try {\n        firebase.database().ref(location).set(data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n\n  updateImagePoints = (imageKey: string, points: number) => {\n    const location = `/users/${this.admin}/images/${imageKey}`;\n      try {\n        firebase.database().ref(location).update({'points': points});\n      } catch (error) {\n        console.log(error);\n      }\n  }\n\n  deleteImage = (imageKey: string) => {\n    const location = `/users/${this.admin}/images/${imageKey}`;\n    try {\n      firebase.database().ref(location).remove();\n    } catch (error) {\n      console.log(error);\n    }  \n\n  }\n}\n\nexport default Firebase;","import React, { createContext } from 'react';\nimport Firebase from './firebase';\n\nconst FirebaseContext = createContext<Firebase | null>(null);\n\nexport default FirebaseContext;","import Firebase from './firebase';\nimport FirebaseContext from './context';\n\nexport { FirebaseContext };\nexport default Firebase;","import React from 'react';\r\n\r\nexport const Link = ({name, link, icon}) => {\r\n  const openInNewTab = (url) => {\r\n    var win = window.open(url, '_blank');\r\n    win.focus();\r\n  }\r\n\r\n  return(\r\n    <div className=\"icon-link\">\r\n      {icon}  \r\n      <p onClick={() => openInNewTab(link)}>{name}</p>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport { AiOutlineLinkedin, AiOutlineGithub } from \"react-icons/ai\";\r\n\r\nimport { Link } from './Link';\r\n\r\nexport const LinkContainer = () => {\r\n  return(\r\n    <div className=\"link-container\">\r\n      <Link \r\n        name=\"github.com\" \r\n        link=\"https://github.com/itjonne\"\r\n        icon={<AiOutlineGithub />} />\r\n      <Link \r\n        name=\"linkedin.com\" \r\n        link=\"https://www.linkedin.com/in/jonne-jormakka-74a308203/\"\r\n        icon={<AiOutlineLinkedin />} />\r\n    </div>\r\n  )\r\n}","import React, { useContext } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport { ROUTES } from '../../constants/';\nimport { FirebaseContext } from '../Firebase';\nimport { LinkContainer } from './LinkContainer';\n\nconst Navigation = () => {\n  const firebase = useContext(FirebaseContext);\n  const history = useHistory();\n\n  return(\n    <div className=\"header\">\n        <Link className=\"header-link\" to={ROUTES.HOME}>://itjonne</Link>\n        <LinkContainer />\n    </div>\n  )\n};\n\nexport default Navigation;","import React, {useContext, useState} from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { FirebaseContext } from '../Firebase';\nimport { ROUTES } from '../../constants';\n\ninterface User {\n  email: string,\n  password: string,\n  error: string,\n}\n\nconst INITIAL_STATE: User = {\n  email: \"\",\n  password: \"\",\n  error: \"\",\n}\n\nconst SignIn = () => {\n  const [user, setUser] = useState<User>(INITIAL_STATE);\n  const firebase = useContext(FirebaseContext);\n  const history = useHistory();\n\n  const {\n    email,\n    password,\n    error,\n  } = user;\n\n  const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    firebase && firebase.signInWithEmailAndPassword(email, password)\n      .then((user) => {\n        firebase.setLoggedUser(user); // Tää menee suoraan contextiin, pitäis renderöidä kaikki?!\n        setUser({ ...INITIAL_STATE });\n        history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        console.log(error);\n        setUser({...user, error: error.message});\n      });\n  }\n\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setUser({...user, [event.target.name]: event.target.value});\n  }\n\n\n\n  return(\n    <div className=\"signin\">\n      <h1>Kirjaudu Sisään:</h1>\n      <form onSubmit={onSubmit}>\n        <p>admin@admin.com / password</p>\n        <input onChange={onChange} name=\"email\" value={email} type=\"email\" placeholder=\"Sähköposti (admin@admin.com)\" />\n        <input onChange={onChange} name=\"password\" value={password} type=\"password\" placeholder=\"Salasana (password)\" />\n        {error && <p className=\"error\">{error}</p>}\n        <button type=\"submit\">Kirjaudu Sisään</button>\n      </form>\n    </div>\n  )\n}\n\nexport default SignIn;","import React, {useContext, useRef, useState, useEffect} from 'react';\r\nimport CanvasDraw from 'react-canvas-draw';\r\nimport { SketchPicker } from 'react-color';\r\nimport { FirebaseContext } from '../Firebase';\r\n\r\nconst percentToHex = (p) => {\r\n  const intValue = Math.round(p / 100 * 255); // map percent to nearest integer (0 - 255)\r\n  const hexValue = intValue.toString(16); // get hexadecimal representation\r\n  return hexValue.padStart(2, '0').toUpperCase(); // format with leading 0 and upper case characters\r\n}\r\n\r\nexport const DrawingComponent = (props) => {\r\n  const [color, setColor] = useState(\"#000000\");\r\n  const [drawColor, setDrawColor] = useState(\"#000000\");\r\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n  const refCanvas = useRef(null);\r\n  const firebase = useContext(FirebaseContext);\r\n\r\n  function getWindowDimensions() {\r\n    let { innerWidth: width, innerHeight: height } = window;\r\n    console.log(width);\r\n    const correctedWidth = width >= 533 ? width = 400 : width = width * 0.75;\r\n    console.log(correctedWidth);\r\n    return {\r\n      width: correctedWidth,\r\n      height\r\n    };\r\n  }\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n  \r\n  const handleChangeComplete = (color) => {\r\n    const alpha = parseFloat(color.rgb.a) * 100;\r\n    const alphaInHex = percentToHex(alpha);\r\n    setColor(color.rgb);\r\n    setDrawColor(color.hex + alphaInHex);\r\n  };\r\n\r\n  const handleSaveData = () => {\r\n    // Runtataan tätä kautta, meneee varmasti oikeeks stringiks nyt nopeesti.\r\n    // Katotaan onko tallennettu mitään.\r\n    if (JSON.parse(refCanvas.current.getSaveData()).lines.length > 0) {\r\n      localStorage.setItem(\r\n        \"savedDrawing\",\r\n        refCanvas.current.getSaveData()\r\n      );\r\n      // : TYPES.ImageObject string, number, boolean\r\n  \r\n      const image = {\r\n        image: localStorage.getItem(\"savedDrawing\"),\r\n        points: 0,\r\n        reported: false,\r\n      }\r\n      \r\n      //firebase.addImage(localStorage.getItem(\"savedDrawing\"));\r\n      firebase.addImageObject(image);\r\n      refCanvas.current.clear();\r\n    } else {\r\n      console.log(\"ei piirrustusta\");\r\n    }\r\n\r\n  }\r\n  \r\n  return(\r\n    <div className=\"drawingComponent\">\r\n      <div className=\"drawableCanvas\">\r\n        <CanvasDraw ref={refCanvas} canvasWidth={windowDimensions.width} canvasHeight={windowDimensions.width} brushColor={drawColor} catenaryColor={drawColor} {...props}/>\r\n      </div>\r\n      <div className=\"toolbar\">\r\n        <div className=\"tool\">\r\n          <button onClick={() => refCanvas.current.undo()}>Kumoa</button>\r\n        </div>\r\n        <div className=\"tool center\">\r\n          <SketchPicker\r\n            width={windowDimensions.width * 0.5}\r\n            color={color}\r\n            onChange={handleChangeComplete}        \r\n            />\r\n        </div>\r\n        <div className=\"tool\">\r\n          <button onClick={() => handleSaveData()}>Tallenna</button>\r\n        </div>\r\n      </div>\r\n      \r\n    </div>\r\n  )\r\n}","import React, { useState } from 'react';\r\n\r\nimport { AiOutlineArrowUp, AiOutlineArrowDown } from \"react-icons/ai\";\r\nimport { MdReport } from \"react-icons/md\";\r\n\r\ninterface CanvasToolProps {\r\n  points: number,\r\n  handlePlus: () => void,\r\n  handleMinus: () => void,\r\n  handleReport: () => void,\r\n}\r\n\r\nexport const CanvasTools = ({points, handlePlus, handleMinus, handleReport}: CanvasToolProps) => {\r\n  const [thispoints, setPoints] = useState(points);\r\n\r\n  const _handlePlus = () => {\r\n    setPoints(thispoints + 1);\r\n    handlePlus();\r\n  }\r\n\r\n  const _handleMinus = () => {\r\n    setPoints(thispoints - 1);\r\n    handleMinus();\r\n  }\r\n  return(\r\n    <div className=\"tools\">\r\n      <div>\r\n        {points >= 0 ? <p className=\"green\">+{points}</p> : <p className=\"red\">{points}</p>}\r\n      </div>\r\n      <div className=\"tool-container\">\r\n        <div className=\"gallerytool green\" onClick={_handlePlus}>\r\n          <AiOutlineArrowUp />\r\n        </div>\r\n        <div className=\"gallerytool red\" onClick={_handleMinus}>\r\n          <AiOutlineArrowDown />\r\n        </div>\r\n        <div className=\"gallerytool\" onClick={handleReport}>\r\n          <MdReport />\r\n        </div>  \r\n      </div>\r\n    </div>  \r\n  )\r\n}","import React, { useContext, useEffect, useRef } from 'react';\r\nimport CanvasDraw from 'react-canvas-draw';\r\nimport { FirebaseContext } from '../Firebase';\r\n\r\nimport { CanvasTools } from './CanvasTools';\r\n\r\nexport const Canvas = (props) => {\r\n  const data = props.data;\r\n  const thisCanvas = useRef(null);\r\n  const firebase = useContext(FirebaseContext);\r\n\r\n  useEffect(() => {\r\n    thisCanvas.current.loadSaveData(data.image);\r\n  },[data.image])\r\n\r\n  const randomInteger = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  }\r\n\r\n  // ============== HANDLERS ==================\r\n\r\n  const handleMouseEnter = (event) => {\r\n    thisCanvas.current.clear();\r\n    thisCanvas.current.loadSaveData(data.image)\r\n  }\r\n\r\n  const handlePlus = () => {\r\n    firebase.updateImagePoints(data.id, data.points += 1);\r\n  }\r\n\r\n  const handleMinus = () => {\r\n    firebase.updateImagePoints(data.id, data.points -= 1);\r\n  }\r\n\r\n  const handleReport = () => {\r\n    firebase.deleteImage(data.id);\r\n  }\r\n\r\n\r\n  return(\r\n    <div>\r\n    <div className=\"canvas\" onClick={(event) => handleMouseEnter()}>\r\n      <CanvasDraw ref={thisCanvas} {...props} loadTimeOffset={randomInteger(10,50)}/>\r\n    </div>\r\n      <CanvasTools points={data.points} handlePlus={handlePlus} handleMinus={handleMinus} handleReport={handleReport} />\r\n    </div>\r\n  )\r\n}","import React, {useContext, useEffect, useState} from 'react';\r\nimport { FirebaseContext } from '../Firebase';\r\n\r\nimport { Canvas } from './Canvas';\r\n\r\nexport const Gallery = () => {\r\n  const [images, setImages] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const firebase = useContext(FirebaseContext);\r\n\r\n  useEffect(() => {\r\n    const imagesRef = firebase.getImages();\r\n    if (firebase.getLoggedUser()) {\r\n      const unsubscribe = imagesRef.on(\"value\", (snapshot) => {\r\n        const data = snapshot.val();\r\n        if (data) {\r\n          const keys = Object.keys(data);\r\n          const found = [];\r\n          for (let key of keys) {\r\n            found.push({id: key, ...data[key]});\r\n          }\r\n          setImages(found);\r\n          setIsLoading(false);\r\n        } else {\r\n          setImages([]);\r\n          setIsLoading(false);\r\n        }\r\n      })\r\n      return () => unsubscribe;\r\n    }\r\n  }, [firebase]);\r\n\r\n  return(\r\n    <div className=\"gallery\">\r\n      {isLoading && <div className=\"loading\"><p>Ootappa hetki, galleria latautuu...</p></div>}\r\n      {\r\n      images \r\n      ? images.map((image, i) => {\r\n        return <Canvas key={i} data={image} canvasHeight={200} canvasWidth={200} disabled={true} />\r\n        })\r\n      : <h1 className=\"center\">Piirräpä kuva ni päästään alkuun!</h1>\r\n      }\r\n    </div>\r\n  )\r\n}","import React, { useContext, useEffect} from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FirebaseContext } from '../Firebase';\nimport { DrawingComponent } from './DrawingComponent';\n\nimport { Gallery } from './Gallery.js';\nimport { ROUTES } from '../../constants';\n\nconst Home = () => {\n  const firebase = useContext(FirebaseContext);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (!firebase?.getLoggedUser()) {\n      history.push(ROUTES.SIGN_IN); \n    }\n  },[firebase, history]);\n\n  const handleSignOut = (event: React.MouseEvent<HTMLButtonElement>) => {\n    firebase?.signOut();\n    history.push(ROUTES.SIGN_IN);\n} \n\n  return(\n    <div className=\"home\">\n      <div className=\"logout\">\n        <button onClick={handleSignOut}>Log Out</button>\n      </div>\n      <h1 className=\"center\">Tervetuloa, piirrä tähän jotain!</h1>\n      <DrawingComponent lazyRadius={0} hideGrid={true} brushRadius={5} />\n      <h1 className=\"center\">Galleria:</h1>\n      <Gallery />\n      <p className=\"center\">Klikkaamalla näkee animaation.</p>\n      \n    </div>\n  )\n};\n\nexport default Home;","import React from 'react';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\n\nimport Navigation from '../Navigation';\nimport SignInPage from '../SignIn';\nimport HomePage from '../Home';\n\nimport { ROUTES } from '../../constants/';\n\nconst App = () => {\n  return(\n    <Router>\n        <Navigation />\n        <Route exact path={ROUTES.HOME} component={HomePage} />\n        <Route path={ROUTES.SIGN_IN} component={SignInPage} />\n        <Redirect from=\"*\" to=\"/\" />\n    </Router>   \n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\nReactDOM.render(\n    <FirebaseContext.Provider value={new Firebase()}>\n      <App />\n    </FirebaseContext.Provider>\n  ,document.getElementById('root')\n);\n"],"sourceRoot":""}